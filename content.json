{"meta":{"title":"小谈同学","subtitle":"","description":"小谈同学的博客","author":"Tab tan","url":"http://tab-tan.github.io","root":"/"},"pages":[{"title":"categories","date":"2020-07-25T09:21:18.000Z","updated":"2020-07-25T09:21:54.984Z","comments":true,"path":"categories/index.html","permalink":"http://tab-tan.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-07-25T09:22:18.000Z","updated":"2020-07-25T09:22:32.305Z","comments":true,"path":"tags/index.html","permalink":"http://tab-tan.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"'多线程'","slug":"多线程","date":"2020-07-25T13:09:08.000Z","updated":"2020-07-25T13:47:26.959Z","comments":true,"path":"2020/07/25/多线程/","link":"","permalink":"http://tab-tan.github.io/2020/07/25/%E5%A4%9A%E7%BA%BF%E7%A8%8B/","excerpt":"","text":"多线程基础实现多线程的四种方式 继承Thread类 实现Runnable接口 实现Callable接口 使用线程池 常用方法 run(),start(),currentThread(),getName(),yield()(放弃cpu的当前执行权),wait(),notify()/notifyAll(),join()sleep(),isAlive(),stop()(已过时) 优先级 MAX_PRIORITY:10（Thread.MAX_PRIORITY）MIN_PRIORITY:1NORM_PRIORITY:5 线程的同步（线程的安全问题） 操作共享数据的代码，即为被同步的代码。 共享数据：多个线程抢夺的资源 同步监视器，俗称：锁。 Callable接口 实现类实现Callable接口 将实现类作为参数创建FutureTask 将FutureTask对象作为参数创建Thread并启动线程 代码： 1234567891011121314151617181920212223242526272829303132333435import java.util.concurrent.Callable;import java.util.concurrent.ExecutionException;import java.util.concurrent.FutureTask;public class CallableTest &#123; public static void main(String[] args) &#123; NumSum ns = new NumSum(); FutureTask f = new FutureTask(ns); new Thread(f).start(); Object object; try &#123; object = f.get(); System.out.println(object); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; catch (ExecutionException e) &#123; e.printStackTrace(); &#125; &#125;&#125;class NumSum implements Callable&#123; int sum = 0; @Override public Object call() throws Exception &#123; for(int i = 0 ; i&lt;50 ; i++) &#123; sum++; &#125; return sum; &#125;&#125; 结果： 线程池 JDK5.0提供线程池相关API：ExecutorService(接口)和Excutors(工具类) 常用方法： Executors.newFixedThreadPool(int i)创建固定数量的线程池。 excute()执行，无返回值 submit()执行，可以有返回值 shutdown()关闭线程池 代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546import java.util.concurrent.Callable;import java.util.concurrent.ExecutionException;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;import java.util.concurrent.Future;import java.util.concurrent.FutureTask;public class ThreadPool &#123; public static void main(String[] args) &#123; MyTest myTest = new MyTest(); ExecutorService pool = Executors.newFixedThreadPool(10); pool.execute(new MyThread()); Future submit = pool.submit(myTest); Object object; try &#123; object = submit.get(); System.out.println(object); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; catch (ExecutionException e) &#123; e.printStackTrace(); &#125; //关闭连接池 pool.isShutdown(); &#125;&#125;class MyTest implements Callable&#123; int m = 0; @Override public Object call() throws Exception &#123; for (int i = 0; i &lt; 50; i++) &#123; m++; &#125; return m; &#125; &#125;class MyThread implements Runnable&#123; @Override public void run() &#123; for (int i = 0; i &lt; 5; i++) &#123; System.out.println(i); &#125; &#125; &#125; 结果： 设置线程池属性 corePoolSize:核心池大小maximumPoolSize:最大线程数keepAliveTime:无任务终止时间数","categories":[{"name":"Java SE","slug":"Java-SE","permalink":"http://tab-tan.github.io/categories/Java-SE/"}],"tags":[{"name":"基础","slug":"基础","permalink":"http://tab-tan.github.io/tags/%E5%9F%BA%E7%A1%80/"},{"name":"多线程","slug":"多线程","permalink":"http://tab-tan.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"}]},{"title":"搭建博客","slug":"搭建博客","date":"2020-07-25T11:40:38.000Z","updated":"2020-07-25T12:53:55.625Z","comments":true,"path":"2020/07/25/搭建博客/","link":"","permalink":"http://tab-tan.github.io/2020/07/25/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"环境github+hexo搭建个人博客 安装环境 安装nodejs 前往nodejs官网下载安装链接-http://nodejs.cn/download/ 安装hexo npm install -g hexo-cli(建议安装淘宝cnpm更快你懂的~) 创建博客文件夹 mkdir blog 如图: 初始化hexo 打开命令行进入创建好的blog命令行开始操作~hexo init 小操作 hexo n 博客标题:创建文章hexo clean | g(生成) | s(本地服务) 安装插件 npm install –save hexo-deployer-git 修改_config.yml文件 deploy:type: ‘git’repo: ‘https://github.com/Tab-Tan/Tab-tan.github.io.git&#39;branch: ‘master’ 远程部署 hexo d","categories":[{"name":"其他","slug":"其他","permalink":"http://tab-tan.github.io/categories/%E5%85%B6%E4%BB%96/"}],"tags":[{"name":"搭建","slug":"搭建","permalink":"http://tab-tan.github.io/tags/%E6%90%AD%E5%BB%BA/"}]},{"title":"我的第一篇博客","slug":"我的第一篇博客","date":"2020-07-24T11:09:03.000Z","updated":"2020-07-25T09:08:59.049Z","comments":true,"path":"2020/07/24/我的第一篇博客/","link":"","permalink":"http://tab-tan.github.io/2020/07/24/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"第一个博客也不知道说些什么 Java天下第一！ yeah~","categories":[{"name":"日常","slug":"日常","permalink":"http://tab-tan.github.io/categories/%E6%97%A5%E5%B8%B8/"}],"tags":[{"name":"其他","slug":"其他","permalink":"http://tab-tan.github.io/tags/%E5%85%B6%E4%BB%96/"}]},{"title":"hello-world","slug":"hello-world","date":"2020-07-24T10:01:59.985Z","updated":"2020-07-25T09:10:15.392Z","comments":true,"path":"2020/07/24/hello-world/","link":"","permalink":"http://tab-tan.github.io/2020/07/24/hello-world/","excerpt":"","text":"title: Hello WorldWelcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"Java SE","slug":"Java-SE","permalink":"http://tab-tan.github.io/categories/Java-SE/"},{"name":"其他","slug":"其他","permalink":"http://tab-tan.github.io/categories/%E5%85%B6%E4%BB%96/"},{"name":"日常","slug":"日常","permalink":"http://tab-tan.github.io/categories/%E6%97%A5%E5%B8%B8/"}],"tags":[{"name":"基础","slug":"基础","permalink":"http://tab-tan.github.io/tags/%E5%9F%BA%E7%A1%80/"},{"name":"多线程","slug":"多线程","permalink":"http://tab-tan.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"},{"name":"搭建","slug":"搭建","permalink":"http://tab-tan.github.io/tags/%E6%90%AD%E5%BB%BA/"},{"name":"其他","slug":"其他","permalink":"http://tab-tan.github.io/tags/%E5%85%B6%E4%BB%96/"}]}